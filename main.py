import json
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import Message
from parsing import *
from database import *


bot = Bot('6025564381:AAE0nNtkoOrNBNstPQFexvEVdyh_U9kNlsA')
dp = Dispatcher(bot)

markup1, markup2 = types.InlineKeyboardMarkup(), types.InlineKeyboardMarkup()
btn1 = types.InlineKeyboardButton('–ö–∏–Ω–æ', callback_data='cinemaNo')
btn2 = types.InlineKeyboardButton('–ö–æ–Ω—Ü–µ—Ä—Ç—ã', callback_data='concertNo')
btn3 = types.InlineKeyboardButton('–¢–µ–∞—Ç—Ä', callback_data='theatreNo')
btn4 = types.InlineKeyboardButton('–ü—É—à–∫–∏–Ω—Å–∫–∞—è –∫–∞—Ä—Ç–∞', callback_data='pushkincardNo')
btn5 = types.InlineKeyboardButton('–ö–≤–µ—Å—Ç—ã', callback_data='questNo')
btn6 = types.InlineKeyboardButton('–®–æ—É', callback_data='showNo')
btn7 = types.InlineKeyboardButton('–°—Ç–µ–Ω–¥–∞–ø', callback_data='standupNo')
btn8 = types.InlineKeyboardButton('–≠–∫—Å–∫—É—Ä—Å–∏–∏', callback_data='excursionNo')
btn9 = types.InlineKeyboardButton('–ú—é–∑–∏–∫–ª—ã', callback_data='musicalNo')
btn10 = types.InlineKeyboardButton('–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã', callback_data='maserclassNo')
# btn11 = types.InlineKeyboardButton('–î–∞–ª—å—à–µ‚û°Ô∏è', callback_data='next')
# btn12 = types.InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É', callback_data='followweekNo')
# btn13 = types.InlineKeyboardButton('–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö', callback_data='follownewNo')
btn11 = types.InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—ÉüèÅ', callback_data='finish')

btn_cinema = types.InlineKeyboardButton('–ö–∏–Ω–æ', callback_data='CINEMA')
btn_concert = types.InlineKeyboardButton('–ö–æ–Ω—Ü–µ—Ä—Ç—ã', callback_data='CONCERT')
btn_theatre = types.InlineKeyboardButton('–¢–µ–∞—Ç—Ä', callback_data='THEATRE')
btn_pcard = types.InlineKeyboardButton('–ü—É—à–∫–∏–Ω—Å–∫–∞—è –∫–∞—Ä—Ç–∞', callback_data='PUSHKIN_CARD')
btn_quest = types.InlineKeyboardButton('–ö–≤–µ—Å—Ç—ã', callback_data='QUEST')
btn_show = types.InlineKeyboardButton('–®–æ—É', callback_data='SHOW')
btn_standup = types.InlineKeyboardButton('–°—Ç–µ–Ω–¥–∞–ø', callback_data='STANDUP')
btn_excursion = types.InlineKeyboardButton('–≠–∫—Å–∫—É—Ä—Å–∏–∏', callback_data='EXCURSION')
btn_musical = types.InlineKeyboardButton('–ú—é–∑–∏–∫–ª—ã', callback_data='MUSICAL')
btn_mclass = types.InlineKeyboardButton('–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã', callback_data='MASTERCLASS')

datas = Parsing()
Writing(datas)

########################################################################################################################

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start(message: Message):  # (message: types.message)
    await bot.send_sticker(message.from_user.id,
                           sticker='CAACAgQAAxkBAAEIuJFkR6hI7xeNZE6F0DZix_p7geY8IAACawADzjkIDVlm6mN2kkvQLwQ')
    # await message.bot.send_photo(chat_id=message.chat.id, photo="https://avatars.mds.yandex.net/get-afishanew/31447/f544f186c83695c48f7505d7884245d5/s380x220")
    # await message.answer(f'{message.from_user.id}')
    await message.answer(
        f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!üôå\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–µ–¥–ª–∞–≥–∞—é –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–æ—Ç–∞ –¥–ª—è —Ç–≤–æ–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞')
    # markup = types.InlineKeyboardMarkup()
    markup1.row(btn1, btn2)
    markup1.row(btn3, btn4)
    markup1.row(btn5, btn6)
    markup1.row(btn7, btn8)
    markup1.row(btn9, btn10)
    markup1.row(btn11)
    await message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)


########################################################################################################################

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@dp.callback_query_handler()
async def callback_message(callback):
    # –∫–Ω–æ–ø–∫–∞ '–¥–∞–ª—å—à–µ'
    # if callback.data == 'next':
    #     await callback.message.delete()
    #     markup2.add(btn6)
    #     markup2.add(btn7)
    #     markup2.add(btn8)
    #     await callback.message.answer('–ö–∞–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å?\n'
    #                                   '–£ –Ω–∞—Å –µ—Å—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –Ω–µ–¥–µ–ª—é –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º, '
    #                                   '–∞ —Ç–∞–∫–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–±–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö.'
    #                                   '\n–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –æ–±–µ —Ä–∞—Å—Å—ã–ª–∫–∏', reply_markup=markup2)

    # –∫–Ω–æ–ø–∫–∞ '–∑–∞–≤–µ—Ä—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É'
    if callback.data == 'finish':
        # await bot.delete_message(callback.message.chat.id, callback.message.message_id)
        await callback.message.delete()
        await callback.message.answer('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!')

    # –∫–∏–Ω–æ –≤—ã–±—Ä–∞–Ω–æ/–Ω–µ –≤—ã–±—Ä–∞–Ω–æ
    elif callback.data == 'cinemaNo':
        btn1.text = '‚úÖ –ö–∏–Ω–æ'
        btn1.callback_data = 'cinemaYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)
    elif callback.data == 'cinemaYes':
        btn1.text = '–ö–∏–Ω–æ'
        btn1.callback_data = 'cinemaNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)

    # –∫–æ–Ω—Ü–µ—Ä—Ç—ã –≤—ã–±—Ä–∞–Ω—ã/–Ω–µ –≤—ã–±—Ä–∞–Ω—ã
    elif callback.data == 'concertNo':
        btn2.text = '‚úÖ –ö–æ–Ω—Ü–µ—Ä—Ç—ã'
        btn2.callback_data = 'concertYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)
    elif callback.data == 'concertYes':
        btn2.text = '–ö–æ–Ω—Ü–µ—Ä—Ç—ã'
        btn2.callback_data = 'concertNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)

    # —Ç–µ–∞—Ç—Ä –≤—ã–±—Ä–∞–Ω/–Ω–µ –≤—ã–±—Ä–∞–Ω
    elif callback.data == 'theatreNo':
        btn3.text = '‚úÖ –¢–µ–∞—Ç—Ä'
        btn3.callback_data = 'theatreYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)
        # –∫–æ–Ω—Ü–µ—Ä—Ç—ã –≤—ã–±—Ä–∞–Ω—ã/–Ω–µ –≤—ã–±—Ä–∞–Ω—ã
    elif callback.data == 'theatreYes':
        btn3.text = '–¢–µ–∞—Ç—Ä'
        btn3.callback_data = 'theatreNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)

    # –ü—É—à–∫–∏–Ω—Å–∫–∞—è –∫–∞—Ä—Ç–∞ –≤—ã–±—Ä–∞–Ω–æ/–Ω–µ –≤—ã–±—Ä–∞–Ω–æ
    elif callback.data == 'pushkincardNo':
        btn4.text = '‚úÖ –ü—É—à–∫–∏–Ω—Å–∫–∞—è –∫–∞—Ä—Ç–∞'
        btn4.callback_data = 'pushkincardYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)
    elif callback.data == 'pushkincardYes':
        btn4.text = '–ü—É—à–∫–∏–Ω—Å–∫–∞—è –∫–∞—Ä—Ç–∞'
        btn4.callback_data = 'pushkincardNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)

    # –ö–≤–µ—Å—Ç—ã –≤—ã–±—Ä–∞–Ω—ã/–Ω–µ –≤—ã–±—Ä–∞–Ω—ã
    elif callback.data == 'questNo':
        btn5.text = '‚úÖ –ö–≤–µ—Å—Ç—ã'
        btn5.callback_data = 'questYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)
    elif callback.data == 'questYes':
        btn5.text = '–ö–≤–µ—Å—Ç—ã'
        btn5.callback_data = 'questNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)

    # –®–æ—É –≤—ã–±—Ä–∞–Ω—ã/–Ω–µ –≤—ã–±—Ä–∞–Ω—ã
    elif callback.data == 'showNo':
        btn6.text = '‚úÖ –®–æ—É'
        btn6.callback_data = 'showYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)
    elif callback.data == 'showYes':
        btn6.text = '–®–æ—É'
        btn6.callback_data = 'showNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)

    # –°—Ç–µ–Ω–¥–∞–ø –≤—ã–±—Ä–∞–Ω/–Ω–µ –≤—ã–±—Ä–∞–Ω
    elif callback.data == 'standupNo':
        btn7.text = '‚úÖ –°—Ç–µ–Ω–¥–∞–ø'
        btn7.callback_data = 'standupYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)
    elif callback.data == 'standupYes':
        btn7.text = '–°—Ç–µ–Ω–¥–∞–ø'
        btn7.callback_data = 'standupNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)

    # —ç–∫—Å–∫—É—Ä—Å–∏–∏ –≤—ã–±—Ä–∞–Ω—ã/–Ω–µ –≤—ã–±—Ä–∞–Ω—ã
    elif callback.data == 'excursionNo':
        btn8.text = '‚úÖ –≠–∫—Å–∫—É—Ä—Å–∏–∏'
        btn8.callback_data = 'excursionYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)
    elif callback.data == 'excursionYes':
        btn8.text = '–≠–∫—Å–∫—É—Ä—Å–∏–∏'
        btn8.callback_data = 'excursionNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)

    # –ú—é–∑–∏–∫–ª—ã –≤—ã–±—Ä–∞–Ω—ã/–Ω–µ –≤—ã–±—Ä–∞–Ω—ã
    elif callback.data == 'musicalNo':
        btn9.text = '‚úÖ –ú—é–∑–∏–∫–ª—ã'
        btn9.callback_data = 'musicalYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)
    elif callback.data == 'musicalYes':
        btn9.text = '–ú—é–∑–∏–∫–ª—ã'
        btn9.callback_data = 'musicalNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)

    # –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –≤—ã–±—Ä–∞–Ω—ã/–Ω–µ –≤—ã–±—Ä–∞–Ω—ã
    elif callback.data == 'maserclassNo':
        btn9.text = '‚úÖ –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã'
        btn9.callback_data = 'maserclassYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)
    elif callback.data == 'maserclassYes':
        btn9.text = '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã'
        btn9.callback_data = 'maserclassNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)

    # –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω—É–∂–Ω–∞/–Ω–µ –Ω—É–∂–Ω–∞
    # elif callback.data == 'followweekNo':
    #     btn6.text = '‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É'
    #     btn6.callback_data = 'followweekYes'
    #     await callback.message.delete()
    #     await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup2)
    # elif callback.data == 'followweekYes':
    #     btn6.text = '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É'
    #     btn6.callback_data = 'followweekNo'
    #     await callback.message.delete()
    #     await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup2)
    #
    # # –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω—É–∂–Ω–∞/–Ω–µ –Ω—É–∂–Ω–∞
    # elif callback.data == 'follownewNo':
    #     btn7.text = '‚úÖ –£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö'
    #     btn7.callback_data = 'follownewYes'
    #     await callback.message.delete()
    #     await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup2)
    # elif callback.data == 'follownewYes':
    #     btn7.text = '–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö'
    #     btn7.callback_data = 'follownewNo'
    #     await callback.message.delete()
    #     await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup2)

    elif callback.data in ['CINEMA', 'CONCERT', 'THEATRE']:
        with open(f'events/{callback.data}.json') as file:
            EVENTS = json.load(file)

        for key, value in EVENTS.items():
            await callback.message.bot.send_photo(chat_id=callback.message.chat.id, photo=value[3],
                                                  caption=f'{key}\n'
                                                          f'–ö–æ–≥–¥–∞: {value[0]}\n'
                                                          f'–ì–¥–µ: {value[1]}\n'
                                                          f'–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É: {value[2]}')


########################################################################################################################

@dp.message_handler(commands=['info'])
async def info(message):
    await message.answer('EventsNN - —ç—Ç–æ –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –≤ –ù–∏–∂–Ω–µ–º –ù–æ–≤–≥–æ—Ä–æ–¥–µ. '
                         '–° –ø–æ–º–æ—â—å—é –Ω–µ–≥–æ –≤—ã —Å –ª–µ–≥–∫–æ—Å—Ç—å—é –Ω–∞–π–¥–µ—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–∞ —Å–≤–æ–π –≤–∫—É—Å.\n')


########################################################################################################################

@dp.message_handler(commands=['events'])
async def events(message):
    markup = types.InlineKeyboardMarkup()
    markup.row(btn_cinema, btn_concert)
    markup.row(btn_theatre, btn_pcard)
    markup.row(btn_quest, btn_show)
    markup.row(btn_standup, btn_excursion)
    markup.row(btn_musical, btn_mclass)
    await message.answer('–ö–∞–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=markup)


########################################################################################################################

executor.start_polling(dp)
