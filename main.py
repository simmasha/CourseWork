from aiogram import Bot, Dispatcher, executor, types
import requests
from bs4 import BeautifulSoup

URL = 'https://afisha.yandex.ru/nizhny-novgorod/cinema?source=menu&preset=today'
r = requests.get(URL)
print(r)
soup = BeautifulSoup(r.text, 'html.parser')
#events = soup.find_all('div', class_='Root-fq4hbj-4 iFrhLC')
events = soup.find_all('h2', class_='Title-fq4hbj-3 hponhw')
events_t = [c.text for c in events]
print(events_t)

print("\n")

bot = Bot('6025564381:AAE0nNtkoOrNBNstPQFexvEVdyh_U9kNlsA')
dp = Dispatcher(bot)

markup1, markup2 = types.InlineKeyboardMarkup(), types.InlineKeyboardMarkup()
btn1 = types.InlineKeyboardButton('–ö–∏–Ω–æ', callback_data='cinemaNo')
btn2 = types.InlineKeyboardButton('–¢–µ–∞—Ç—Ä', callback_data='theatreNo')
btn3 = types.InlineKeyboardButton('–ö–æ–Ω—Ü–µ—Ä—Ç—ã', callback_data='concertNo')
btn4 = types.InlineKeyboardButton('–í—ã—Å—Ç–∞–≤–∫–∏', callback_data='exhibitionNo')
btn5 = types.InlineKeyboardButton('–î–∞–ª—å—à–µ‚û°Ô∏è', callback_data='next')

btn6 = types.InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É', callback_data='followweekNo')
btn7 = types.InlineKeyboardButton('–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö', callback_data='follownewNo')
btn8 = types.InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—ÉüèÅ', callback_data='finish')

########################################################################################################################

#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start(message): #(message: types.message)
    await bot.send_sticker(message.from_user.id, sticker='CAACAgQAAxkBAAEIuJFkR6hI7xeNZE6F0DZix_p7geY8IAACawADzjkIDVlm6mN2kkvQLwQ')
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!üôå\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–µ–¥–ª–∞–≥–∞—é –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–æ—Ç–∞ –¥–ª—è —Ç–≤–æ–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞')
    #markup = types.InlineKeyboardMarkup()
    markup1.row(btn1, btn2)
    markup1.row(btn3, btn4)
    markup1.row(btn5)
    await message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)

########################################################################################################################

#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@dp.callback_query_handler()
async def callback_message(callback):
    #–∫–Ω–æ–ø–∫–∞ '–¥–∞–ª—å—à–µ'
    if callback.data == 'next':
        await callback.message.delete()
        markup2.add(btn6)
        markup2.add(btn7)
        markup2.add(btn8)
        await callback.message.answer('–ö–∞–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å?\n'
                                      '–£ –Ω–∞—Å –µ—Å—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –Ω–µ–¥–µ–ª—é –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º, '
                                      '–∞ —Ç–∞–∫–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–±–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö.'
                                      '\n–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –æ–±–µ —Ä–∞—Å—Å—ã–ª–∫–∏', reply_markup=markup2)

    #–∫–Ω–æ–ø–∫–∞ '–∑–∞–≤–µ—Ä—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É'
    elif callback.data == 'finish':
        #await bot.delete_message(callback.message.chat.id, callback.message.message_id)
        await callback.message.delete()
        await callback.message.answer('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!')

    #–∫–∏–Ω–æ –≤—ã–±—Ä–∞–Ω–æ/–Ω–µ –≤—ã–±—Ä–∞–Ω–æ
    elif callback.data == 'cinemaNo':
        btn1.text = '‚úÖ –ö–∏–Ω–æ'
        btn1.callback_data = 'cinemaYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)
    elif callback.data == 'cinemaYes':
        btn1.text = '–ö–∏–Ω–æ'
        btn1.callback_data = 'cinemaNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)

    #—Ç–µ–∞—Ç—Ä –≤—ã–±—Ä–∞–Ω/–Ω–µ –≤—ã–±—Ä–∞–Ω
    elif callback.data == 'theatreNo':
        btn2.text = '‚úÖ –¢–µ–∞—Ç—Ä'
        btn2.callback_data = 'theatreYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)
    elif callback.data == 'theatreYes':
        btn2.text = '–¢–µ–∞—Ç—Ä'
        btn2.callback_data = 'theatreNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)

    # –∫–æ–Ω—Ü–µ—Ä—Ç—ã –≤—ã–±—Ä–∞–Ω—ã/–Ω–µ –≤—ã–±—Ä–∞–Ω—ã
    elif callback.data == 'concertNo':
        btn3.text = '‚úÖ –ö–æ–Ω—Ü–µ—Ä—Ç—ã'
        btn3.callback_data = 'concertYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)
    elif callback.data == 'concertYes':
        btn3.text = '–ö–æ–Ω—Ü–µ—Ä—Ç—ã'
        btn3.callback_data = 'concertNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)

    # –≤—ã—Å—Ç–∞–≤–∫–∏ –≤—ã–±—Ä–∞–Ω—ã/–Ω–µ –≤—ã–±—Ä–∞–Ω—ã
    elif callback.data == 'exhibitionNo':
        btn4.text = '‚úÖ –í—ã—Å—Ç–∞–≤–∫–∏'
        btn4.callback_data = 'exhibitionYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)
    elif callback.data == 'exhibitionYes':
        btn4.text = '–í—ã—Å—Ç–∞–≤–∫–∏'
        btn4.callback_data = 'exhibitionNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup1)

    # –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω—É–∂–Ω–∞/–Ω–µ –Ω—É–∂–Ω–∞
    elif callback.data == 'followweekNo':
        btn6.text = '‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É'
        btn6.callback_data = 'followweekYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup2)
    elif callback.data == 'followweekYes':
        btn6.text = '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É'
        btn6.callback_data = 'followweekNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup2)

    # –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω—É–∂–Ω–∞/–Ω–µ –Ω—É–∂–Ω–∞
    elif callback.data == 'follownewNo':
        btn7.text = '‚úÖ –£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö'
        btn7.callback_data = 'follownewYes'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup2)
    elif callback.data == 'follownewYes':
        btn7.text = '–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö'
        btn7.callback_data = 'follownewNo'
        await callback.message.delete()
        await callback.message.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç', reply_markup=markup2)


########################################################################################################################

@dp.message_handler(commands=['info'])
async def info(message):
    await message.answer('EventsNN - —ç—Ç–æ –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –≤ –ù–∏–∂–Ω–µ–º –ù–æ–≤–≥–æ—Ä–æ–¥–µ. '
                                     '–° –ø–æ–º–æ—â—å—é –Ω–µ–≥–æ –≤—ã —Å –ª–µ–≥–∫–æ—Å—Ç—å—é –Ω–∞–π–¥–µ—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–∞ —Å–≤–æ–π –≤–∫—É—Å.\n')

########################################################################################################################

@dp.message_handler(commands=['events'])
async def events(message):
    #await message.answer('–£ –Ω–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–πüò¢')
    await message.answer('–°–µ–≥–æ–¥–Ω—è –≤ –∫–∏–Ω–æ:')
    await message.answer(events_t)

########################################################################################################################

executor.start_polling(dp)
